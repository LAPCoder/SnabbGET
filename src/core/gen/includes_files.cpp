#include <iostream>
#include <vector>
#include <dirent.h>
#include <fstream>
#include <string>
#include <filesystem>

std::string replaceAll(std::string str, const std::string &from,
						const std::string &to)
{
	size_t start_pos = 0;
	while((start_pos = str.find(from, start_pos)) != std::string::npos)
	{
		str.replace(start_pos, from.length(), to);
		start_pos += to.length(); 
		// Handles case where 'to' is a substring of 'from'
	}
	return str;
}

int main()
{
	std::vector<char *> files;

	std::ofstream fileOut;
	remove("./src/core/includesAll.hpp");
	fileOut.open("./src/core/includesAll.hpp", std::ios_base::app);
	fileOut <<"// THIS FILE IS GENERATED BY src/core/gen/includes_files.cpp\n";
	fileOut << "// DON'T CHANGE IT!\n";
	fileOut << "#pragma once\n";
	for (const auto & entry : std::filesystem::directory_iterator("./src/core/cmd/"))
	{
		
		fileOut << "#include \"./cmd" << std::string(
				replaceAll(entry.path(), "./src/core/cmd", "")
			) << "\"\n";
		std::cout << entry.path() << " | ";
	}
	std::cout << std::endl;

	return EXIT_SUCCESS;
}
